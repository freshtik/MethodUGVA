{"ast":null,"code":"var _jsxFileName = \"D:\\\\project_react\\\\2022_New_chapter\\\\my-app\\\\src\\\\components\\\\Visualization\\\\Visualization.js\";\nimport React from 'react';\nimport { Grid, Table, Form, Input, Button } from 'semantic-ui-react';\nimport UGVA_man from '../common/UGVA-man/UGVA-man';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Visualization extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      proportionsUGVA: { ...this.props.proportions.Average\n      },\n      colorsUGVA: { ...this.props.colors\n      }\n    };\n\n    this.handleSizeChangeClick = size => {\n      this.setState({\n        proportionsUGVA: { ...this.props.proportions[size]\n        }\n      });\n    };\n\n    this.handleProportionsChange = (param, e) => {\n      this.setState(prevState => ({\n        proportionsUGVA: { ...prevState.proportionsUGVA,\n          [param]: e.target.value\n        }\n      }));\n    };\n\n    this.handleColorChange = (color, e) => {\n      this.setState(prevState => ({\n        colorsUGVA: { ...prevState.colorsUGVA,\n          [color]: e.target.value\n        }\n      }));\n    };\n\n    this.handleColorsThreeChange = (color1, color2, color3, e) => {\n      this.setState(prevState => ({\n        colorsUGVA: { ...prevState.colorsUGVA,\n          [color1]: e.target.value,\n          [color2]: e.target.value,\n          [color3]: e.target.value\n        }\n      }));\n    };\n  }\n\n  handleColorDel() {\n    this.setState({\n      colorsUGVA: { ...this.props.colors\n      }\n    });\n  }\n\n  render() {\n    const min = { ...this.props.proportions.Minimum\n    };\n    const max = { ...this.props.proportions.Maximum\n    };\n    console.log(this.props); // Выводим все на экран\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization_content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Visualization;","map":{"version":3,"sources":["D:/project_react/2022_New_chapter/my-app/src/components/Visualization/Visualization.js"],"names":["React","Grid","Table","Form","Input","Button","UGVA_man","Visualization","Component","state","proportionsUGVA","props","proportions","Average","colorsUGVA","colors","handleSizeChangeClick","size","setState","handleProportionsChange","param","e","prevState","target","value","handleColorChange","color","handleColorsThreeChange","color1","color2","color3","handleColorDel","render","min","Minimum","max","Maximum","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,MAAlC,QAA+C,mBAA/C;AACA,OAAOC,QAAP,MAAqB,6BAArB;;;AAEA,MAAMC,aAAN,SAA4BP,KAAK,CAACQ,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAExCC,KAFwC,GAEhC;AACJC,MAAAA,eAAe,EAAE,EAAC,GAAG,KAAKC,KAAL,CAAWC,WAAX,CAAuBC;AAA3B,OADb;AAEJC,MAAAA,UAAU,EAAE,EAAC,GAAG,KAAKH,KAAL,CAAWI;AAAf;AAFR,KAFgC;;AAAA,SAOxCC,qBAPwC,GAOfC,IAAD,IAAU;AAC9B,WAAKC,QAAL,CAAe;AACXR,QAAAA,eAAe,EAAE,EAAC,GAAG,KAAKC,KAAL,CAAWC,WAAX,CAAuBK,IAAvB;AAAJ;AADN,OAAf;AAGH,KAXuC;;AAAA,SAmBxCE,uBAnBwC,GAmBd,CAACC,KAAD,EAAQC,CAAR,KAAc;AACpC,WAAKH,QAAL,CAAcI,SAAS,KAAK;AACxBZ,QAAAA,eAAe,EACX,EACI,GAAGY,SAAS,CAACZ,eADjB;AAEI,WAACU,KAAD,GAASC,CAAC,CAACE,MAAF,CAASC;AAFtB;AAFoB,OAAL,CAAvB;AAOH,KA3BuC;;AAAA,SA6BxCC,iBA7BwC,GA6BpB,CAACC,KAAD,EAAQL,CAAR,KAAc;AAC9B,WAAKH,QAAL,CAAcI,SAAS,KAAK;AACxBR,QAAAA,UAAU,EACN,EACI,GAAGQ,SAAS,CAACR,UADjB;AAEI,WAACY,KAAD,GAASL,CAAC,CAACE,MAAF,CAASC;AAFtB;AAFoB,OAAL,CAAvB;AAOH,KArCuC;;AAAA,SAuCxCG,uBAvCwC,GAuCd,CAACC,MAAD,EAASC,MAAT,EAAiBC,MAAjB,EAAyBT,CAAzB,KAA+B;AACrD,WAAKH,QAAL,CAAcI,SAAS,KAAK;AACxBR,QAAAA,UAAU,EACN,EACI,GAAGQ,SAAS,CAACR,UADjB;AAEI,WAACc,MAAD,GAAUP,CAAC,CAACE,MAAF,CAASC,KAFvB;AAGI,WAACK,MAAD,GAAUR,CAAC,CAACE,MAAF,CAASC,KAHvB;AAII,WAACM,MAAD,GAAUT,CAAC,CAACE,MAAF,CAASC;AAJvB;AAFoB,OAAL,CAAvB;AASH,KAjDuC;AAAA;;AAaxCO,EAAAA,cAAc,GAAG;AACb,SAAKb,QAAL,CAAe;AACXJ,MAAAA,UAAU,EAAE,EAAC,GAAG,KAAKH,KAAL,CAAWI;AAAf;AADD,KAAf;AAGH;;AAkCDiB,EAAAA,MAAM,GAAG;AACL,UAAMC,GAAG,GAAG,EAAC,GAAG,KAAKtB,KAAL,CAAWC,WAAX,CAAuBsB;AAA3B,KAAZ;AACA,UAAMC,GAAG,GAAG,EAAC,GAAG,KAAKxB,KAAL,CAAWC,WAAX,CAAuBwB;AAA3B,KAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAjB,EAHK,CAKL;;AACA,wBACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AAkTH;;AA3WuC;;AA8W5C,eAAeJ,aAAf","sourcesContent":["import React from 'react'\nimport {Grid, Table, Form, Input, Button} from 'semantic-ui-react'\nimport UGVA_man from '../common/UGVA-man/UGVA-man'\n\nclass Visualization extends React.Component {\n\n    state = {\n        proportionsUGVA: {...this.props.proportions.Average},\n        colorsUGVA: {...this.props.colors},\n    }\n\n    handleSizeChangeClick = (size) => {\n        this.setState(({\n            proportionsUGVA: {...this.props.proportions[size]}\n        }))\n    }\n\n    handleColorDel() {\n        this.setState(({\n            colorsUGVA: {...this.props.colors}\n        }))\n    }\n\n    handleProportionsChange = (param, e) => {\n        this.setState(prevState => ({\n            proportionsUGVA:\n                {\n                    ...prevState.proportionsUGVA,\n                    [param]: e.target.value\n                }\n        }))\n    }\n\n    handleColorChange = (color, e) => {\n        this.setState(prevState => ({\n            colorsUGVA:\n                {\n                    ...prevState.colorsUGVA,\n                    [color]: e.target.value\n                }\n        }))\n    }\n\n    handleColorsThreeChange = (color1, color2, color3, e) => {\n        this.setState(prevState => ({\n            colorsUGVA:\n                {\n                    ...prevState.colorsUGVA,\n                    [color1]: e.target.value,\n                    [color2]: e.target.value,\n                    [color3]: e.target.value,\n                }\n        }))\n    }\n\n    render() {\n        const min = {...this.props.proportions.Minimum}\n        const max = {...this.props.proportions.Maximum}\n        console.log(this.props)\n\n        // Выводим все на экран\n        return (\n            <div className='visualization_content'>\n                {/* <Grid columns={2}>\n                    <Grid.Column>\n                        <h3>Свободная визуализация</h3>\n\n                        <Form widths='equal'>\n                            <br/>\n                            <Form.Group widths='5'>\n\n                                <Form.Input label='Шляпа' type='number'\n                                            value={this.state.proportionsUGVA.hat_size}\n                                            min={min.hat_size} max={max.hat_size}\n                                            onChange={this.handleProportionsChange.bind(this, 'hat_size')}/>\n                                <Form.Field>\n                                    <label>Цвет</label>\n                                    <input type='color' value={this.state.colorsUGVA.hat_color}\n                                        onChange={this.handleColorChange.bind(this, 'hat_color')}/>\n                                </Form.Field>\n\n                                <Form.Input label='Голова' type='number'\n                                            value={this.state.proportionsUGVA.head_radius}\n                                            min={min.head_radius} max={max.head_radius}\n                                            onChange={this.handleProportionsChange.bind(this, 'head_radius')}/>\n\n                                <Form.Field>\n                                    <label>Цвет</label>\n                                    <input type='color' value={this.state.colorsUGVA.head_color}\n                                        onChange={this.handleColorChange.bind(this, 'head_color')}/>\n                                </Form.Field>\n\n                                <Form.Input label='Улыбка' type='number'\n                                            value={this.state.proportionsUGVA.smile_coef}\n                                            min={min.smile_coef} max={max.smile_coef}\n                                            onChange={this.handleProportionsChange.bind(this, 'smile_coef')}/>\n                            </Form.Group>\n\n                            <br/>\n\n                        </Form>\n\n                        <Table collapsing basic='very'>\n                            <Table.Header>\n                                <Table.Row textAlign='center'>\n                                    <Table.HeaderCell>Часть \"тела\"</Table.HeaderCell>\n                                    <Table.HeaderCell>Ширина</Table.HeaderCell>\n                                    <Table.HeaderCell>Высота</Table.HeaderCell>\n                                    <Table.HeaderCell>Цвет</Table.HeaderCell>\n                                    <Table.HeaderCell>Общий цвет</Table.HeaderCell>\n                                </Table.Row>\n                            </Table.Header>\n\n                            <Table.Body>\n                                <Table.Row>\n                                    <Table.Cell>Правое плечо</Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.shoulder_right_width}\n                                            min={min.shoulder_right_width} max={max.shoulder_right_width}\n                                            onChange={this.handleProportionsChange.bind(this, 'shoulder_right_width')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.arm_right_height}\n                                            min={min.arm_right_height} max={max.arm_right_height}\n                                            onChange={this.handleProportionsChange.bind(this, 'arm_right_height')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <input type='color' value={this.state.colorsUGVA.shoulder_right_color}\n                                            onChange={this.handleColorChange.bind(this, 'shoulder_right_color')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <input type='color' value={this.state.colorsUGVA.arm_right_color}\n                                            onChange={this.handleColorsThreeChange.bind(this, 'forearm_right_color',\n                                                'shoulder_right_color', 'arm_right_color')}/>\n                                    </Table.Cell>\n                                </Table.Row>\n\n                                <Table.Row>\n                                    <Table.Cell>Правое предплечье</Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.forearm_right_width}\n                                            min={min.forearm_right_width} max={max.forearm_right_width}\n                                            onChange={this.handleProportionsChange.bind(this, 'forearm_right_width')}/>\n                                    </Table.Cell>\n                                    <Table.Cell/>\n                                    <Table.Cell textAlign='center'>\n                                        <input type='color' value={this.state.colorsUGVA.forearm_right_color}\n                                            onChange={this.handleColorChange.bind(this, 'forearm_right_color')}/>\n                                    </Table.Cell>\n                                    <Table.Cell/>\n                                </Table.Row>\n\n                                <Table.Row>\n                                    <Table.Cell>Левое плечо</Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.shoulder_left_width}\n                                            min={min.shoulder_left_width} max={max.shoulder_left_width}\n                                            onChange={this.handleProportionsChange.bind(this, 'shoulder_left_width')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.arm_left_height}\n                                            min={min.arm_left_height} max={max.arm_left_height}\n                                            onChange={this.handleProportionsChange.bind(this, 'arm_left_height')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <input type='color' value={this.state.colorsUGVA.shoulder_left_color}\n                                            onChange={this.handleColorChange.bind(this, 'shoulder_left_color')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <input type='color' value={this.state.colorsUGVA.arm_left_color}\n                                            onChange={this.handleColorsThreeChange.bind(this, 'forearm_left_color',\n                                                'shoulder_left_color', 'arm_left_color' )}/>\n                                    </Table.Cell>\n                                </Table.Row>\n\n                                <Table.Row>\n                                    <Table.Cell>Левое предплечье</Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.forearm_left_width}\n                                            min={min.forearm_left_width} max={max.forearm_left_width}\n                                            onChange={this.handleProportionsChange.bind(this, 'forearm_left_width')}/>\n                                    </Table.Cell>\n                                    <Table.Cell/>\n                                    <Table.Cell textAlign='center'>\n                                        <input type='color' value={this.state.colorsUGVA.forearm_left_color}\n                                            onChange={this.handleColorChange.bind(this, 'forearm_left_color')}/>\n                                    </Table.Cell>\n                                    <Table.Cell/>\n                                </Table.Row>\n\n                                <Table.Row>\n                                    <Table.Cell>Туловище 1 уровень</Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.thorax_width}\n                                            min={min.thorax_width} max={max.thorax_width}\n                                            onChange={this.handleProportionsChange.bind(this, 'thorax_width')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.thorax_height}\n                                            min={min.thorax_height} max={max.thorax_height}\n                                            onChange={this.handleProportionsChange.bind(this, 'thorax_height')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <input type='color' value={this.state.colorsUGVA.thorax_color}\n                                            onChange={this.handleColorChange.bind(this, 'thorax_color')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <input type='color' value={this.state.colorsUGVA.body_color}\n                                            onChange={this.handleColorsThreeChange.bind(this, 'thorax_color',\n                                                'abdomen_color', 'body_color')}/>\n                                    </Table.Cell>\n                                </Table.Row>\n\n                                <Table.Row>\n                                    <Table.Cell>Туловище 2 уровень</Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.abdomen_width}\n                                            min={min.abdomen_width} max={max.abdomen_width}\n                                            onChange={this.handleProportionsChange.bind(this, 'abdomen_width')} />\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.abdomen_height}\n                                            min={min.abdomen_height} max={max.abdomen_height}\n                                            onChange={this.handleProportionsChange.bind(this, 'abdomen_height')} />\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <input type='color' value={this.state.colorsUGVA.abdomen_color}\n                                            onChange={this.handleColorChange.bind(this, 'abdomen_color')}/>\n                                    </Table.Cell>\n                                    <Table.Cell/>\n                                </Table.Row>\n\n                                <Table.Row>\n                                    <Table.Cell>Таз 1 уровень</Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.pelvis_l1_width}\n                                            min={min.pelvis_l1_width} max={max.pelvis_l1_width}\n                                            onChange={this.handleProportionsChange.bind(this, 'pelvis_l1_width')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.pelvis_l1_height}\n                                            min={min.pelvis_l1_height} max={max.pelvis_l1_height}\n                                            onChange={this.handleProportionsChange.bind(this, 'pelvis_l1_height')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <input type='color' value={this.state.colorsUGVA.pelvis_l1_color}\n                                            onChange={this.handleColorChange.bind(this, 'pelvis_l1_color')}/>\n                                    </Table.Cell>\n                                    <Table.Cell/>\n                                </Table.Row>\n\n                                <Table.Row>\n                                    <Table.Cell>Таз 2 уровень</Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.pelvis_l2_width}\n                                            min={min.pelvis_l2_width} max={max.pelvis_l2_width}\n                                            onChange={this.handleProportionsChange.bind(this, 'pelvis_l2_width')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.pelvis_l2_height}\n                                            min={min.pelvis_l2_height} max={max.pelvis_l2_height}\n                                            onChange={this.handleProportionsChange.bind(this, 'pelvis_l2_height')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <input type='color' value={this.state.colorsUGVA.pelvis_l2_color}\n                                            onChange={this.handleColorChange.bind(this, 'pelvis_l2_color')}/>\n                                    </Table.Cell>\n                                    <Table.Cell/>\n                                </Table.Row>\n\n                                <Table.Row>\n                                    <Table.Cell>Нога 1</Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.leg1_width}\n                                            min={min.leg1_width} max={max.leg1_width}\n                                            onChange={this.handleProportionsChange.bind(this, 'leg1_width')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.leg1_height}\n                                            min={min.leg1_height} max={max.leg1_height}\n                                            onChange={this.handleProportionsChange.bind(this, 'leg1_height')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <input type='color' value={this.state.colorsUGVA.leg1_color}\n                                            onChange={this.handleColorChange.bind(this, 'leg1_color')}/>\n                                    </Table.Cell>\n                                    <Table.Cell/>\n                                </Table.Row>\n\n                                <Table.Row>\n                                    <Table.Cell>Нога 2</Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.leg2_width}\n                                            min={min.leg2_width} max={max.leg2_width}\n                                            onChange={this.handleProportionsChange.bind(this, 'leg2_width')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.leg2_height}\n                                            min={min.leg2_height} max={max.leg2_height}\n                                            onChange={this.handleProportionsChange.bind(this, 'leg2_height')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <input type='color' value={this.state.colorsUGVA.leg2_color}\n                                            onChange={this.handleColorChange.bind(this, 'leg2_color')}/>\n                                    </Table.Cell>\n                                    <Table.Cell/>\n                                </Table.Row>\n\n                                <Table.Row>\n                                    <Table.Cell>Нога 3</Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.leg3_width}\n                                            min={min.leg3_width} max={max.leg3_width}\n                                            onChange={this.handleProportionsChange.bind(this, 'leg3_width')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <Input type='number'\n                                            value={this.state.proportionsUGVA.leg3_height}\n                                            min={min.leg3_height} max={max.leg3_height}\n                                            onChange={this.handleProportionsChange.bind(this, 'leg3_height')}/>\n                                    </Table.Cell>\n                                    <Table.Cell textAlign='center'>\n                                        <input type='color' value={this.state.colorsUGVA.leg3_color}\n                                            onChange={this.handleColorChange.bind(this, 'leg3_color')}/>\n                                    </Table.Cell>\n                                    <Table.Cell/>\n                                </Table.Row>\n                            </Table.Body>\n                        </Table>\n                    </Grid.Column>\n\n                    <Grid.Column>\n                        <br/>\n                        <Button.Group attached='top' color='teal'>\n                            <Button onClick={this.handleSizeChangeClick.bind(this, 'Minimum')}>Минимум</Button>\n                            <Button onClick={this.handleSizeChangeClick.bind(this, 'Average')}>По умолчанию</Button>\n                            <Button onClick={this.handleSizeChangeClick.bind(this, 'Maximum')}>Максимум</Button>\n                            <Button onClick={this.handleColorDel.bind(this)}>Сброс цвета</Button>\n                        </Button.Group>\n                        <br/>\n\n                        <UGVA_man proportionsUGVA={this.state.proportionsUGVA} colorsUGVA={this.state.colorsUGVA}\n                                max={this.props.proportions.Maximum}\n                        />\n                    </Grid.Column>\n                </Grid> */}\n            </div>\n        )\n    }\n}\n\nexport default Visualization;\n"]},"metadata":{},"sourceType":"module"}