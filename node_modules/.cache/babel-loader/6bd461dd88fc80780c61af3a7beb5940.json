{"ast":null,"code":"var _jsxFileName = \"D:\\\\project_react\\\\2022_New_chapter\\\\my-app\\\\src\\\\components\\\\Curriculums\\\\Curriculums_visualization\\\\Above_curriculums_visualization.js\",\n    _s = $RefreshSig$();\n\nimport \"./Curriculums_visualization.css\";\nimport { useParams } from \"react-router-dom\";\nimport UGVA_man from \"../../common/UGVA-man/UGVA-man\";\nimport Curriculums_visualization from \"./Curriculums_visualization\";\nimport Hidden_content from \"../common/Hidden_content\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Above_curriculums_visualization = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    skills,\n    estimates,\n    curriculums,\n    disciplines,\n    groupSkills,\n    skillsLinkGroupSkills\n  } = props;\n  let ourCurriculum = [];\n  let disciplinesOurCurriculum = [];\n  curriculums.forEach(el => {\n    if (el.id == id) ourCurriculum = el;\n  });\n  disciplines.forEach(el => {\n    if (el.curriculum_id == id) disciplinesOurCurriculum.push(el);\n  });\n  console.log(disciplinesOurCurriculum);\n  let totalHoursDisciplinesOurCurriculum = 0;\n  disciplinesOurCurriculum.forEach(el => {\n    totalHoursDisciplinesOurCurriculum += el.audit_hours;\n  }); //Расчет оценок базовой и вариативной частей с учетом вида оценивания и времени\n\n  const sumEstimates = skills.map(skill => {\n    let sum_base = 0;\n    let sum_variable = 0;\n    let sum_calc_base = 0;\n    let sum_calc_variable = 0;\n    disciplinesOurCurriculum.forEach(el => {\n      const koef_exam = 1;\n      const koef_offset = 0.75;\n      estimates.forEach(est => {\n        if (est.discipline_id == el.id && est.skill_id == skill.id) {\n          const hoursProcent = 100 * el.audit_hours / totalHoursDisciplinesOurCurriculum;\n          const interimEstimate = est.estimate * hoursProcent;\n\n          if (el.part_id == 0) {\n            sum_base += est.estimate;\n            sum_calc_base += el.control_id == 0 ? interimEstimate * koef_exam : interimEstimate * koef_offset;\n          } else {\n            sum_variable += est.estimate;\n            sum_calc_variable += el.control_id == 0 ? interimEstimate * koef_exam : interimEstimate * koef_offset;\n          }\n        }\n      });\n    });\n    return {\n      skill_id: skill.id,\n      sum_base: sum_base,\n      sum_variable: sum_variable,\n      sum_calc_base: sum_calc_base,\n      sum_calc_variable: sum_calc_variable\n    };\n  });\n  let totalSumEstimates = 0;\n  sumEstimates.forEach(el => totalSumEstimates += el.sum_calc_base + el.sum_calc_variable); //Рассчитываем данные для отрисовки\n\n  let calcData = sumEstimates.map(el => {\n    const koef_variable = 0.5;\n    const base = el.sum_calc_base;\n    const variable = el.sum_calc_variable * koef_variable;\n    return {\n      skill_id: el.skill_id,\n      base: base,\n      variable: variable,\n      sum: base + variable\n    };\n  }); //Распределенные по группам ПУ и рассчитанные данные\n\n  const calcDataForVisualization = groupSkills.map(gr => {\n    let estimate = 0;\n    skillsLinkGroupSkills.forEach(el => {\n      if (gr.id == el.groupSkills_id) {\n        calcData.forEach(elData => {\n          if (el.skills_id == elData.skill_id) {\n            estimate += gr.part_id == 0 ? elData.base : elData.variable;\n          }\n        });\n      }\n    });\n    return {\n      id_groupSkills: gr.id,\n      fragment: gr.fragment,\n      name: gr.name,\n      estimate: estimate\n    };\n  });\n  console.log(\"Fuuuh, proverka\", calcDataForVisualization);\n  let ugvaData = props.proportions.Zero; //Присваиваем рассчитанные размеры фрагментам образа\n\n  calcDataForVisualization.forEach(gr => {\n    switch (gr.fragment) {\n      case \"shoulder_right\":\n        ugvaData.shoulder_right_width += gr.estimate;\n        break;\n\n      case \"forearm_right\":\n        ugvaData.forearm_right_width += gr.estimate;\n        break;\n\n      case \"thorax\":\n        ugvaData.thorax_width += gr.estimate; //  ugvaData.thorax_height += gr.estimate;\n\n        break;\n\n      case \"abdomen\":\n        ugvaData.abdomen_width += gr.estimate; //  ugvaData.abdomen_height += gr.estimate;\n\n        break;\n\n      case \"shoulder_left\":\n        ugvaData.shoulder_left_width += gr.estimate;\n        break;\n\n      case \"forearm_left\":\n        ugvaData.forearm_left_width += gr.estimate;\n        break;\n\n      case \"hat\":\n        ugvaData.hat_size += gr.estimate;\n        break;\n\n      case \"pelvis_l1\":\n        ugvaData.pelvis_l1_width += gr.estimate;\n        ugvaData.pelvis_l1_height += gr.estimate;\n        break;\n\n      default:\n        alert(\"Хммм, возникла проблема, у программиста руки не из того места:( Просим понять и простить\");\n        break;\n    }\n  });\n  const max = props.proportions.Maximum;\n  const colors = props.colors;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app_content_visualization visualization_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization_content_left\",\n      children: /*#__PURE__*/_jsxDEV(Curriculums_visualization, {\n        valuesGroupsSkills: calcDataForVisualization,\n        id: id,\n        curriculums: curriculums,\n        disciplines: disciplines,\n        skills: skills,\n        estimates: estimates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization_content_right\",\n      children: /*#__PURE__*/_jsxDEV(UGVA_man, {\n        proportionsUGVA: ugvaData,\n        colorsUGVA: colors,\n        max: max\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Hidden_content, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Above_curriculums_visualization, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c = Above_curriculums_visualization;\nexport default Above_curriculums_visualization;\n\nvar _c;\n\n$RefreshReg$(_c, \"Above_curriculums_visualization\");","map":{"version":3,"sources":["D:/project_react/2022_New_chapter/my-app/src/components/Curriculums/Curriculums_visualization/Above_curriculums_visualization.js"],"names":["useParams","UGVA_man","Curriculums_visualization","Hidden_content","Above_curriculums_visualization","props","id","skills","estimates","curriculums","disciplines","groupSkills","skillsLinkGroupSkills","ourCurriculum","disciplinesOurCurriculum","forEach","el","curriculum_id","push","console","log","totalHoursDisciplinesOurCurriculum","audit_hours","sumEstimates","map","skill","sum_base","sum_variable","sum_calc_base","sum_calc_variable","koef_exam","koef_offset","est","discipline_id","skill_id","hoursProcent","interimEstimate","estimate","part_id","control_id","totalSumEstimates","calcData","koef_variable","base","variable","sum","calcDataForVisualization","gr","groupSkills_id","elData","skills_id","id_groupSkills","fragment","name","ugvaData","proportions","Zero","shoulder_right_width","forearm_right_width","thorax_width","abdomen_width","shoulder_left_width","forearm_left_width","hat_size","pelvis_l1_width","pelvis_l1_height","alert","max","Maximum","colors"],"mappings":"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","sourcesContent":["import \"./Curriculums_visualization.css\"\r\nimport { useParams } from \"react-router-dom\";\r\nimport UGVA_man from \"../../common/UGVA-man/UGVA-man\";\r\nimport Curriculums_visualization from \"./Curriculums_visualization\";\r\n\r\nimport Hidden_content from \"../common/Hidden_content\";\r\n\r\n\r\nconst Above_curriculums_visualization = (props) => {\r\n\r\n    const { id } = useParams();\r\n\r\n    const { skills, estimates, curriculums, \r\n            disciplines, groupSkills, skillsLinkGroupSkills } = props;\r\n\r\n    let ourCurriculum = [];\r\n    let disciplinesOurCurriculum = [];\r\n\r\n    curriculums.forEach(el => {\r\n        if (el.id == id) ourCurriculum = el;\r\n    });\r\n\r\n    disciplines.forEach(el => {\r\n        if (el.curriculum_id == id) disciplinesOurCurriculum.push(el);\r\n    })\r\n\r\n    console.log(disciplinesOurCurriculum);\r\n\r\n    let totalHoursDisciplinesOurCurriculum = 0;\r\n\r\n    disciplinesOurCurriculum.forEach(el => {\r\n        totalHoursDisciplinesOurCurriculum += el.audit_hours;\r\n    })\r\n\r\n    //Расчет оценок базовой и вариативной частей с учетом вида оценивания и времени\r\n    const sumEstimates = skills.map(skill => {\r\n        let sum_base = 0;\r\n        let sum_variable = 0;\r\n        let sum_calc_base = 0;\r\n        let sum_calc_variable = 0;\r\n\r\n        disciplinesOurCurriculum.forEach(el =>{\r\n            const koef_exam = 1;\r\n            const koef_offset = 0.75;\r\n            estimates.forEach(est => {\r\n                if (est.discipline_id == el.id && est.skill_id == skill.id) {\r\n                    const hoursProcent = 100 * el.audit_hours / totalHoursDisciplinesOurCurriculum;\r\n                    const interimEstimate = est.estimate * hoursProcent;\r\n\r\n                    if (el.part_id == 0) {\r\n                        sum_base += est.estimate;\r\n                        sum_calc_base += (el.control_id == 0)   ? interimEstimate * koef_exam \r\n                                                                : interimEstimate * koef_offset;\r\n                    }\r\n                    else {\r\n                        sum_variable += est.estimate;\r\n                        sum_calc_variable += (el.control_id == 0)   ? interimEstimate * koef_exam \r\n                                                                    : interimEstimate * koef_offset;\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        return (\r\n            {\r\n                skill_id: skill.id,\r\n                sum_base: sum_base,\r\n                sum_variable: sum_variable,\r\n                sum_calc_base: sum_calc_base,\r\n                sum_calc_variable: sum_calc_variable\r\n            }     \r\n        )\r\n    })\r\n\r\n    let totalSumEstimates = 0;\r\n    sumEstimates.forEach (el => totalSumEstimates += el.sum_calc_base + el.sum_calc_variable);\r\n\r\n    //Рассчитываем данные для отрисовки\r\n    let calcData =  sumEstimates.map(el => {\r\n        const koef_variable = 0.5;\r\n        const base = el.sum_calc_base;\r\n        const variable = el.sum_calc_variable * koef_variable;\r\n        return(\r\n            {\r\n                skill_id: el.skill_id,\r\n                base: base,\r\n                variable: variable,\r\n                sum: base + variable\r\n            }\r\n        )\r\n    })\r\n\r\n//Распределенные по группам ПУ и рассчитанные данные\r\n    const calcDataForVisualization = groupSkills.map (gr => {\r\n        let estimate = 0;\r\n\r\n        skillsLinkGroupSkills.forEach(el => {\r\n            if(gr.id == el.groupSkills_id) {\r\n                calcData.forEach(elData => {\r\n                    if(el.skills_id == elData.skill_id) {\r\n                        estimate += (gr.part_id == 0) ? elData.base : elData.variable;\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n        return ({\r\n            id_groupSkills: gr.id,\r\n            fragment: gr.fragment,\r\n            name: gr.name,\r\n            estimate: estimate\r\n        })\r\n    })\r\n    \r\n    console.log(\"Fuuuh, proverka\", calcDataForVisualization)\r\n\r\n    let ugvaData = props.proportions.Zero;\r\n\r\n    //Присваиваем рассчитанные размеры фрагментам образа\r\n    calcDataForVisualization.forEach(gr => {\r\n        switch (gr.fragment) {\r\n            case \"shoulder_right\":\r\n                ugvaData.shoulder_right_width += gr.estimate;\r\n                break;\r\n            \r\n            case \"forearm_right\":\r\n                 ugvaData.forearm_right_width += gr.estimate;\r\n                break;\r\n                            \r\n            case \"thorax\":\r\n                 ugvaData.thorax_width += gr.estimate;\r\n                //  ugvaData.thorax_height += gr.estimate;\r\n            break;\r\n                        \r\n            case \"abdomen\":\r\n                 ugvaData.abdomen_width += gr.estimate;\r\n                //  ugvaData.abdomen_height += gr.estimate;\r\n                break;\r\n                            \r\n            case \"shoulder_left\":\r\n                 ugvaData.shoulder_left_width += gr.estimate;\r\n            break;\r\n                        \r\n            case \"forearm_left\":\r\n                 ugvaData.forearm_left_width += gr.estimate;\r\n                break;\r\n                            \r\n            case \"hat\":\r\n                ugvaData.hat_size += gr.estimate;\r\n            break;\r\n                        \r\n            case \"pelvis_l1\":\r\n                 ugvaData.pelvis_l1_width += gr.estimate;\r\n                 ugvaData.pelvis_l1_height += gr.estimate;\r\n                break;\r\n          \r\n            default:\r\n                alert(\"Хммм, возникла проблема, у программиста руки не из того места:( Просим понять и простить\");\r\n                break;\r\n        }\r\n    })\r\n\r\n    const max = props.proportions.Maximum\r\n    \r\n    const colors = props.colors\r\n\r\n    return (\r\n        <div className=\"app_content_visualization visualization_container\">\r\n            <div className=\"visualization_content_left\">\r\n                <Curriculums_visualization  valuesGroupsSkills={calcDataForVisualization}\r\n                                            id={id} curriculums={curriculums} disciplines={disciplines}\r\n                                            skills={skills} estimates={estimates}\r\n                />\r\n            </div>\r\n            <div className='visualization_content_right'>\r\n                <UGVA_man proportionsUGVA={ugvaData} colorsUGVA={colors}\r\n                                max={max}\r\n                        />\r\n            </div>\r\n\r\n            <Hidden_content />\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Above_curriculums_visualization; "]},"metadata":{},"sourceType":"module"}