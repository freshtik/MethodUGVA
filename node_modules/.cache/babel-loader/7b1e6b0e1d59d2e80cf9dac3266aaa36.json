{"ast":null,"code":"var _jsxFileName = \"D:\\\\project_react\\\\2022_New_chapter\\\\my-app\\\\src\\\\components\\\\common\\\\UGVA-man\\\\UGVA-man.js\";\nimport React from 'react';\nimport Sketch from \"react-p5\";\nimport { Button } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UGVA_man(props) {\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(resultWidth(), resultHeight_max()).parent(canvasParentRef);\n  };\n\n  let save_state_eps = false;\n  let save_state_jpg = false;\n  console.log(props);\n  const neck_height = 10;\n  let canvas = null;\n  console.log(props.proportionsUGVA); // MAIN VARIABLES WITH DEFAULT VALUES\n\n  let hat_size = props.proportionsUGVA.hat_size;\n  let head_radius = props.proportionsUGVA.head_radius;\n  let smile_coef = -props.proportionsUGVA.smile_coef;\n  let thorax_width = props.proportionsUGVA.thorax_width;\n  let thorax_height = props.proportionsUGVA.thorax_height;\n  let abdomen_width = props.proportionsUGVA.abdomen_width;\n  let abdomen_height = props.proportionsUGVA.abdomen_height;\n  let pelvis_l1_width = props.proportionsUGVA.pelvis_l1_width;\n  let pelvis_l1_height = props.proportionsUGVA.pelvis_l1_height;\n  let pelvis_l2_width = props.proportionsUGVA.pelvis_l2_width;\n  let pelvis_l2_height = props.proportionsUGVA.pelvis_l2_height;\n  let arm_right_height = props.proportionsUGVA.arm_right_height;\n  let shoulder_right_width = props.proportionsUGVA.shoulder_right_width;\n  let forearm_right_width = props.proportionsUGVA.forearm_right_width;\n  let arm_left_height = +props.proportionsUGVA.arm_left_height;\n  let shoulder_left_width = +props.proportionsUGVA.shoulder_left_width;\n  let forearm_left_width = +props.proportionsUGVA.forearm_left_width;\n  let leg1_width = props.proportionsUGVA.leg1_width;\n  let leg1_height = props.proportionsUGVA.leg1_height;\n  let leg2_width = props.proportionsUGVA.leg2_width;\n  let leg2_height = props.proportionsUGVA.leg2_height;\n  let leg3_width = props.proportionsUGVA.leg3_width;\n  let leg3_height = props.proportionsUGVA.leg3_height; //Max variables\n\n  let hat_max = props.max.hat_size;\n  let head_max = props.max.head_radius;\n  let thorax_width_max = props.max.thorax_width;\n  let abdomen_width_max = props.max.abdomen_width;\n  let pelvis_l1_width_max = props.max.pelvis_l1_width;\n  let pelvis_l2_width_max = props.max.pelvis_l1_width;\n  let shoulder_max = props.max.shoulder_left_width;\n  let forearm_max = props.max.forearm_left_width;\n  let leg_max = props.max.leg1_height;\n  let hat_color = props.colorsUGVA.hat_color;\n  let head_color = props.colorsUGVA.head_color;\n  let forearm_right_color = props.colorsUGVA.forearm_right_color;\n  let shoulder_right_color = props.colorsUGVA.shoulder_right_color;\n  let forearm_left_color = props.colorsUGVA.forearm_left_color;\n  let shoulder_left_color = props.colorsUGVA.shoulder_left_color;\n  let thorax_color = props.colorsUGVA.thorax_color;\n  let abdomen_color = props.colorsUGVA.abdomen_color;\n  let pelvis_l1_color = props.colorsUGVA.pelvis_l1_color;\n  let pelvis_l2_color = props.colorsUGVA.pelvis_l2_color;\n  let leg1_color = props.colorsUGVA.leg1_color;\n  let leg2_color = props.colorsUGVA.leg2_color;\n  let leg3_color = props.colorsUGVA.leg3_color;\n\n  const resultWidth = () => 100 + head_max * 2 + (forearm_max + shoulder_max) * 2; // TOTAL HEIGHT COUNT METHOD\n\n\n  const resultHeight = () => {\n    return 10 + hat_size + head_radius + thorax_height + abdomen_height + pelvis_l1_height + pelvis_l2_height + Math.max([leg1_height, leg2_height, leg3_height]) + hat_size * 0.10 + neck_height;\n  };\n\n  const resultHeight_max = () => {\n    return 10 + hat_max + head_max + thorax_width_max + abdomen_width_max + pelvis_l1_width_max + pelvis_l2_width_max + leg_max + hat_max * 0.10 + neck_height * 10 - 100;\n  };\n\n  let indent = (resultHeight_max() - resultHeight()) / 2;\n\n  const draw = p5 => {\n    p5.rect(5, 5, resultWidth() - 10, resultHeight_max() - 10);\n    p5.translate(p5.width / 2, p5.height / 10);\n\n    if (hat_size >= 0) {\n      p5.fill(hat_color);\n      p5.rect(-hat_size / 2, 0, hat_size, hat_size / 2);\n      p5.translate(0, hat_size / 2);\n      p5.rect(-hat_size * 0.9, 0, hat_size * 1.8, hat_size / 10);\n      p5.translate(0, hat_size / 10 + head_radius / 2);\n      p5.fill(\"#FFFFFF\"); //HAT'S PENT\n    } // HEAD\n\n\n    p5.fill(head_color);\n    p5.ellipse(0, 0, head_radius);\n    p5.ellipse(-head_radius / 5, -head_radius / 5, 6);\n    p5.ellipse(head_radius / 5, -head_radius / 5, 6); //nose\n\n    p5.line(0, 5, -5, 0);\n    p5.line(0, 5, 5, 0);\n    p5.translate(0, head_radius * 0.25); //smile\n\n    p5.line(-head_radius / 8, 0, head_radius / 8, 0);\n    p5.line(-head_radius / 8, 0, -head_radius / 4, smile_coef);\n    p5.line(head_radius / 8, 0, head_radius / 4, smile_coef);\n    p5.translate(0, head_radius * 0.25); // NECK\n\n    p5.rect(-10, 0, 20, neck_height);\n    p5.translate(0, neck_height);\n    p5.fill(\"#FFFFFF\"); // BODY LEVEL 1\n\n    p5.fill(thorax_color);\n    p5.rect(-thorax_width / 2, 0, thorax_width, thorax_height);\n    p5.fill(\"#FFFFFF\"); // HANDS\n    //Hands_level1\n\n    p5.fill(\"#FFFFFF\");\n    p5.rect(-thorax_width / 2, 0, -10, arm_right_height);\n    p5.fill(\"#FFFFFF\");\n    p5.rect(thorax_width / 2, 0, 10, arm_left_height);\n    p5.fill(\"#FFFFFF\"); //Hands_level2\n\n    const point_arm2_left = thorax_width * 0.5;\n    const point_arm2_right = thorax_width * 0.5;\n    p5.fill(shoulder_left_color);\n\n    if (shoulder_left_width > 0) {\n      p5.beginShape();\n      p5.vertex(thorax_width / 2 + 10, 0);\n      p5.vertex(thorax_width / 2 + 10 + shoulder_left_width, thorax_width * 0.5);\n      p5.vertex(thorax_width / 2 + 10 + shoulder_left_width, thorax_width * 0.5 + arm_left_height);\n      p5.vertex(thorax_width / 2 + 10, arm_left_height);\n      p5.vertex(thorax_width / 2 + 10, 0);\n      p5.endShape();\n    }\n\n    p5.fill(\"#FFFFFF\");\n    p5.fill(shoulder_right_color);\n\n    if (shoulder_right_width === 0) {} else {\n      p5.beginShape();\n      p5.vertex(-thorax_width / 2 - 10, 0);\n      p5.vertex(-thorax_width / 2 - 10 - shoulder_right_width, thorax_width * 0.5);\n      p5.vertex(-thorax_width / 2 - 10 - shoulder_right_width, thorax_width * 0.5 + arm_right_height * 1);\n      p5.vertex(-thorax_width / 2 - 10, arm_right_height);\n      p5.vertex(-thorax_width / 2 - 10, 0);\n      p5.endShape();\n    }\n\n    p5.fill(\"#FFFFFF\"); //Hands_level3\n\n    p5.fill(forearm_left_color);\n    p5.rect(thorax_width / 2 + 10 + shoulder_left_width, point_arm2_right, forearm_left_width, arm_left_height);\n    p5.fill(\"#FFFFFF\");\n    p5.fill(forearm_right_color);\n    p5.rect(-thorax_width / 2 - 10 - shoulder_right_width, point_arm2_left, -forearm_right_width, arm_right_height);\n    p5.fill(\"#FFFFFF\"); //Hands level4\n\n    p5.fill(\"#FFFFFF\");\n    p5.rect(thorax_width / 2 + 10 + shoulder_left_width + forearm_left_width, point_arm2_right, 15, arm_left_height);\n    p5.fill(\"#FFFFFF\");\n    p5.rect(-thorax_width / 2 - 10 - shoulder_right_width - forearm_right_width, point_arm2_left, -15, arm_right_height);\n    p5.fill(\"#FFFFFF\");\n    p5.translate(0, thorax_height); // BODY LEVEL 2\n\n    p5.fill(abdomen_color);\n    p5.rect(-abdomen_width / 2, 0, abdomen_width, abdomen_height);\n    p5.fill(\"#FFFFFF\");\n    p5.translate(0, abdomen_height); // BODY LEVEL 3\n\n    p5.fill(pelvis_l1_color);\n    p5.rect(-pelvis_l1_width / 2, 0, pelvis_l1_width, pelvis_l1_height);\n    p5.fill(\"#FFFFFF\");\n    p5.translate(0, pelvis_l1_height); // BODY LEVEL 4\n\n    p5.fill(pelvis_l2_color);\n    p5.rect(-pelvis_l2_width / 2, 0, pelvis_l2_width, pelvis_l2_height);\n    p5.fill(\"#FFFFFF\");\n    p5.translate(0, pelvis_l2_height); //LEGS\n\n    if (leg1_width >= 10) {\n      p5.fill(leg1_color);\n      p5.rect(-pelvis_l2_width / 2.2, 0, -leg1_width, leg1_height);\n      p5.fill(\"#FFFFFF\");\n    }\n\n    if (leg2_width >= 10) {\n      p5.fill(leg2_color);\n      p5.rect(-leg2_width / 2, 0, leg2_width, leg2_height);\n      p5.fill(\"#FFFFFF\");\n    }\n\n    if (leg3_width >= 10) {\n      p5.fill(leg3_color);\n      p5.rect(pelvis_l2_width / 2.2, 0, leg3_width, leg3_height);\n      p5.fill(\"#FFFFFF\");\n    }\n\n    if (save_state_eps === true) {\n      p5.saveCanvas('ugva_eps', 'eps');\n      save_state_eps = false;\n    }\n\n    if (save_state_jpg === true) {\n      p5.saveCanvas('ugva_jpg', 'jpg');\n      save_state_jpg = false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Sketch, {\n      setup: setup,\n      draw: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n      attached: \"bottom\",\n      color: \"blue\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: event => save_state_eps = true,\n        children: \" \\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C (eps)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: event => save_state_jpg = true,\n        children: \" \\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C (jpg)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 9\n  }, this);\n}\n\n_c = UGVA_man;\nexport default UGVA_man;\n\nvar _c;\n\n$RefreshReg$(_c, \"UGVA_man\");","map":{"version":3,"sources":["D:/project_react/2022_New_chapter/my-app/src/components/common/UGVA-man/UGVA-man.js"],"names":["React","Sketch","Button","UGVA_man","props","setup","p5","canvasParentRef","createCanvas","resultWidth","resultHeight_max","parent","save_state_eps","save_state_jpg","console","log","neck_height","canvas","proportionsUGVA","hat_size","head_radius","smile_coef","thorax_width","thorax_height","abdomen_width","abdomen_height","pelvis_l1_width","pelvis_l1_height","pelvis_l2_width","pelvis_l2_height","arm_right_height","shoulder_right_width","forearm_right_width","arm_left_height","shoulder_left_width","forearm_left_width","leg1_width","leg1_height","leg2_width","leg2_height","leg3_width","leg3_height","hat_max","max","head_max","thorax_width_max","abdomen_width_max","pelvis_l1_width_max","pelvis_l2_width_max","shoulder_max","forearm_max","leg_max","hat_color","colorsUGVA","head_color","forearm_right_color","shoulder_right_color","forearm_left_color","shoulder_left_color","thorax_color","abdomen_color","pelvis_l1_color","pelvis_l2_color","leg1_color","leg2_color","leg3_color","resultHeight","Math","indent","draw","rect","translate","width","height","fill","ellipse","line","point_arm2_left","point_arm2_right","beginShape","vertex","endShape","saveCanvas","event"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Sketch from \"react-p5\";\nimport { Button } from 'semantic-ui-react'\n\nfunction UGVA_man(props) {\n    const setup = (p5, canvasParentRef) => {\n        p5.createCanvas(resultWidth(), resultHeight_max()).parent(canvasParentRef)\n    }\n    let save_state_eps = false\n    let save_state_jpg = false\n\n    console.log(props)\n\n    const neck_height = 10\n\n    let canvas = null\n\n    console.log(props.proportionsUGVA)\n\n    // MAIN VARIABLES WITH DEFAULT VALUES\n    let hat_size = props.proportionsUGVA.hat_size\n    let head_radius = props.proportionsUGVA.head_radius\n    let smile_coef = -props.proportionsUGVA.smile_coef\n\n    let thorax_width = props.proportionsUGVA.thorax_width\n    let thorax_height = props.proportionsUGVA.thorax_height\n\n    let abdomen_width = props.proportionsUGVA.abdomen_width\n    let abdomen_height = props.proportionsUGVA.abdomen_height\n\n    let pelvis_l1_width = props.proportionsUGVA.pelvis_l1_width\n    let pelvis_l1_height = props.proportionsUGVA.pelvis_l1_height\n\n    let pelvis_l2_width = props.proportionsUGVA.pelvis_l2_width\n    let pelvis_l2_height = props.proportionsUGVA.pelvis_l2_height\n\n    let arm_right_height = props.proportionsUGVA.arm_right_height\n\n    let shoulder_right_width = props.proportionsUGVA.shoulder_right_width\n    let forearm_right_width = props.proportionsUGVA.forearm_right_width\n\n    let arm_left_height = +props.proportionsUGVA.arm_left_height\n\n    let shoulder_left_width = +props.proportionsUGVA.shoulder_left_width\n    let forearm_left_width = +props.proportionsUGVA.forearm_left_width\n\n    let leg1_width = props.proportionsUGVA.leg1_width\n    let leg1_height = props.proportionsUGVA.leg1_height\n\n    let leg2_width = props.proportionsUGVA.leg2_width\n    let leg2_height = props.proportionsUGVA.leg2_height\n\n    let leg3_width = props.proportionsUGVA.leg3_width\n    let leg3_height = props.proportionsUGVA.leg3_height\n\n    //Max variables\n    let hat_max = props.max.hat_size\n    let head_max = props.max.head_radius\n\n    let thorax_width_max = props.max.thorax_width\n    let abdomen_width_max = props.max.abdomen_width\n    let pelvis_l1_width_max = props.max.pelvis_l1_width\n    let pelvis_l2_width_max = props.max.pelvis_l1_width\n\n    let shoulder_max = props.max.shoulder_left_width\n    let forearm_max = props.max.forearm_left_width\n    let leg_max = props.max.leg1_height\n\n    let hat_color = props.colorsUGVA.hat_color\n    let head_color = props.colorsUGVA.head_color\n\n    let forearm_right_color = props.colorsUGVA.forearm_right_color\n    let shoulder_right_color = props.colorsUGVA.shoulder_right_color\n    let forearm_left_color = props.colorsUGVA.forearm_left_color\n    let shoulder_left_color = props.colorsUGVA.shoulder_left_color\n\n    let thorax_color = props.colorsUGVA.thorax_color\n    let abdomen_color = props.colorsUGVA.abdomen_color\n    let pelvis_l1_color = props.colorsUGVA.pelvis_l1_color\n    let pelvis_l2_color = props.colorsUGVA.pelvis_l2_color\n\n    let leg1_color = props.colorsUGVA.leg1_color\n    let leg2_color = props.colorsUGVA.leg2_color\n    let leg3_color = props.colorsUGVA.leg3_color\n\n\n\n    const resultWidth = () => (100 + head_max * 2 + (forearm_max + shoulder_max) * 2);\n\n// TOTAL HEIGHT COUNT METHOD\n    const resultHeight = () => {\n        return 10 + hat_size + head_radius + thorax_height + abdomen_height + pelvis_l1_height + pelvis_l2_height +\n            Math.max([leg1_height, leg2_height, leg3_height]) + hat_size * 0.10 + neck_height\n    }\n\n    const resultHeight_max = () => {\n        return 10 + hat_max + head_max + thorax_width_max + abdomen_width_max + pelvis_l1_width_max + pelvis_l2_width_max +\n            leg_max + (hat_max * 0.10) + neck_height * 10 - 100;\n    }\n    let indent = (resultHeight_max() - resultHeight()) / 2;\n\n    const draw = p5 => {\n\n        p5.rect(5, 5, resultWidth() - 10, resultHeight_max()-10)\n\n        p5.translate(p5.width / 2, p5.height / 10)\n\n        if (hat_size >= 0) {\n            p5.fill(hat_color)\n\n            p5.rect(-hat_size / 2, 0, hat_size, hat_size / 2)\n            p5.translate(0, hat_size / 2)\n\n            p5.rect(-hat_size * 0.9, 0, hat_size * 1.8, hat_size / 10)\n            p5.translate(0, hat_size / 10 + head_radius / 2)\n\n            p5.fill(\"#FFFFFF\")\n            //HAT'S PENT\n        }\n\n        // HEAD\n        p5.fill(head_color)\n        p5.ellipse(0, 0, head_radius)\n        p5.ellipse(-head_radius / 5, -head_radius / 5, 6)\n        p5.ellipse(head_radius / 5, -head_radius / 5, 6)\n        //nose\n        p5.line(0, 5, -5, 0)\n        p5.line(0, 5, 5, 0)\n\n        p5.translate(0, head_radius * 0.25)\n\n        //smile\n        p5.line(-head_radius / 8, 0, head_radius / 8, 0)\n        p5.line(-head_radius / 8, 0, -head_radius / 4, smile_coef)\n        p5.line(head_radius / 8, 0, head_radius / 4, smile_coef)\n\n        p5.translate(0, head_radius * 0.25)\n\n        // NECK\n        p5.rect(-10, 0, 20, neck_height)\n\n        p5.translate(0, neck_height)\n        p5.fill(\"#FFFFFF\")\n\n        // BODY LEVEL 1\n        p5.fill(thorax_color)\n        p5.rect(-thorax_width / 2, 0, thorax_width, thorax_height)\n        p5.fill(\"#FFFFFF\")\n\n        // HANDS\n        //Hands_level1\n        p5.fill(\"#FFFFFF\")\n        p5.rect(-thorax_width / 2, 0, -10, arm_right_height)\n        p5.fill(\"#FFFFFF\")\n        p5.rect(thorax_width / 2, 0, 10, arm_left_height)\n        p5.fill(\"#FFFFFF\")\n\n        //Hands_level2\n        const point_arm2_left = thorax_width * 0.5\n        const point_arm2_right = thorax_width * 0.5\n\n        p5.fill(shoulder_left_color)\n        if (shoulder_left_width > 0) {\n            p5.beginShape();\n            p5.vertex(thorax_width / 2 + 10, 0)\n            p5.vertex(thorax_width / 2 + 10 + shoulder_left_width, thorax_width * 0.5)\n            p5.vertex(thorax_width / 2 + 10 + shoulder_left_width, thorax_width * 0.5 + arm_left_height)\n            p5.vertex(thorax_width / 2 + 10, arm_left_height)\n            p5.vertex(thorax_width / 2 + 10, 0)\n            p5.endShape();\n        }\n        p5.fill(\"#FFFFFF\")\n\n        p5.fill(shoulder_right_color)\n        if (shoulder_right_width === 0){}\n        else{\n            p5.beginShape();\n            p5.vertex(-thorax_width / 2 - 10, 0)\n            p5.vertex(-thorax_width / 2 - 10 - shoulder_right_width, thorax_width * 0.5)\n            p5.vertex(-thorax_width / 2 - 10 - shoulder_right_width, thorax_width * 0.5 + arm_right_height * 1)\n            p5.vertex(-thorax_width / 2 - 10, arm_right_height)\n            p5.vertex(-thorax_width / 2 - 10, 0)\n            p5.endShape();\n        }\n        p5.fill(\"#FFFFFF\")\n\n        //Hands_level3\n        p5.fill(forearm_left_color)\n        p5.rect(thorax_width / 2 + 10 + shoulder_left_width, point_arm2_right, forearm_left_width, arm_left_height)\n        p5.fill(\"#FFFFFF\")\n        p5.fill(forearm_right_color)\n        p5.rect(-thorax_width / 2 - 10 - shoulder_right_width, point_arm2_left, -forearm_right_width, arm_right_height)\n        p5.fill(\"#FFFFFF\")\n\n        //Hands level4\n        p5.fill(\"#FFFFFF\")\n        p5.rect(thorax_width / 2 + 10 + shoulder_left_width + forearm_left_width, point_arm2_right, 15, arm_left_height)\n        p5.fill(\"#FFFFFF\")\n        p5.rect(-thorax_width / 2 - 10 - shoulder_right_width - forearm_right_width, point_arm2_left, -15, arm_right_height)\n        p5.fill(\"#FFFFFF\")\n\n        p5.translate(0, thorax_height)\n\n        // BODY LEVEL 2\n        p5.fill(abdomen_color)\n        p5.rect(-abdomen_width / 2, 0, abdomen_width, abdomen_height)\n        p5.fill(\"#FFFFFF\")\n\n        p5.translate(0, abdomen_height)\n\n        // BODY LEVEL 3\n        p5.fill(pelvis_l1_color)\n        p5.rect(-pelvis_l1_width / 2, 0, pelvis_l1_width, pelvis_l1_height)\n        p5.fill(\"#FFFFFF\")\n\n        p5.translate(0, pelvis_l1_height)\n\n        // BODY LEVEL 4\n        p5.fill(pelvis_l2_color)\n        p5.rect(-pelvis_l2_width / 2, 0, pelvis_l2_width, pelvis_l2_height)\n        p5.fill(\"#FFFFFF\")\n\n        p5.translate(0, pelvis_l2_height)\n\n        //LEGS\n        if (leg1_width >= 10) {\n            p5.fill(leg1_color)\n            p5.rect(-pelvis_l2_width / 2.2, 0, -leg1_width, leg1_height)\n            p5.fill(\"#FFFFFF\")\n        }\n        if (leg2_width >= 10) {\n            p5.fill(leg2_color)\n            p5.rect(-leg2_width / 2, 0, leg2_width, leg2_height)\n            p5.fill(\"#FFFFFF\")\n        }\n        if (leg3_width >= 10) {\n            p5.fill(leg3_color)\n            p5.rect(pelvis_l2_width / 2.2, 0, leg3_width, leg3_height)\n            p5.fill(\"#FFFFFF\")\n        }\n\n        if (save_state_eps === true) {\n            p5.saveCanvas('ugva_eps', 'eps');\n            save_state_eps = false\n        }\n        if (save_state_jpg === true) {\n            p5.saveCanvas('ugva_jpg', 'jpg');\n            save_state_jpg = false\n        }\n    }\n\n    return (\n        <div>\n            <Sketch setup={setup} draw={draw}/>\n            <Button.Group attached='bottom' color='blue'>\n                <Button onClick={event => save_state_eps = true}> Сохранить (eps)</Button>\n                <Button onClick={event => save_state_jpg = true}> Сохранить (jpg)</Button>\n            </Button.Group>\n        </div>\n    )\n}\n\nexport default UGVA_man\n"]},"metadata":{},"sourceType":"module"}