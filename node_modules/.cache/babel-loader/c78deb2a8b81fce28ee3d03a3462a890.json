{"ast":null,"code":"var _jsxFileName = \"D:\\\\project_react\\\\2022_New_chapter\\\\my-app\\\\src\\\\components\\\\Curriculums\\\\Curriculums_visualization\\\\Above_curriculums_visualization.js\",\n    _s = $RefreshSig$();\n\nimport \"./Curriculums_visualization.css\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Above_curriculums_visualization = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    skills,\n    estimates,\n    curriculums,\n    disciplines,\n    groupSkills\n  } = props;\n  let ourCurriculum = [];\n  let disciplinesOurCurriculum = [];\n  curriculums.forEach(el => {\n    if (el.id == id) ourCurriculum = el;\n  });\n  disciplines.forEach(el => {\n    if (el.curriculum_id == id) disciplinesOurCurriculum.push(el);\n  });\n  console.log(disciplinesOurCurriculum);\n  let totalHoursDisciplinesOurCurriculum = 0;\n  disciplinesOurCurriculum.forEach(el => {\n    totalHoursDisciplinesOurCurriculum += el.audit_hours;\n  }); //Расчет оценок базовой и вариативной частей с учетом вида оценивания и времени\n\n  const sumEstimates = skills.map(skill => {\n    let sum_base = 0;\n    let sum_variable = 0;\n    let sum_calc_base = 0;\n    let sum_calc_variable = 0;\n    disciplinesOurCurriculum.forEach(el => {\n      const koef_exam = 1;\n      const koef_offset = 0.75;\n      estimates.forEach(est => {\n        if (est.discipline_id == el.id && est.skill_id == skill.id) {\n          const hoursProcent = 100 * el.audit_hours / totalHoursDisciplinesOurCurriculum;\n          const interimEstimate = est.estimate * hoursProcent;\n\n          if (el.part_id == 0) {\n            sum_base += est.estimate;\n            sum_calc_base += el.control_id == 0 ? interimEstimate * koef_exam : interimEstimate * koef_offset;\n          } else {\n            sum_variable += est.estimate;\n            sum_calc_variable += el.control_id == 0 ? interimEstimate * koef_exam : interimEstimate * koef_offset;\n          }\n        }\n      });\n    });\n    return {\n      id: skill.id,\n      sum_base: sum_base,\n      sum_variable: sum_variable,\n      sum_calc_base: sum_calc_base,\n      sum_calc_variable: sum_calc_variable\n    };\n  });\n  let totalSumEstimates = 0;\n  sumEstimates.forEach(el => totalSumEstimates += el.sum_calc_base + el.sum_calc_variable); //Рассчитываем данные для отрисовки\n\n  let ugvaData = sumEstimates.map(el => {\n    const koef_variable = 0.5;\n    return {\n      id: el.id,\n      base: el.sum_calc_base * 100 / totalSumEstimates,\n      variable: el.sum_calc_variable * 100 / totalSumEstimates * 0.5\n    };\n  });\n  console.log(sumEstimates);\n  console.log(totalSumEstimates);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"d\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Above_curriculums_visualization, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c = Above_curriculums_visualization;\nexport default Above_curriculums_visualization;\n\nvar _c;\n\n$RefreshReg$(_c, \"Above_curriculums_visualization\");","map":{"version":3,"sources":["D:/project_react/2022_New_chapter/my-app/src/components/Curriculums/Curriculums_visualization/Above_curriculums_visualization.js"],"names":["useParams","Above_curriculums_visualization","props","id","skills","estimates","curriculums","disciplines","groupSkills","ourCurriculum","disciplinesOurCurriculum","forEach","el","curriculum_id","push","console","log","totalHoursDisciplinesOurCurriculum","audit_hours","sumEstimates","map","skill","sum_base","sum_variable","sum_calc_base","sum_calc_variable","koef_exam","koef_offset","est","discipline_id","skill_id","hoursProcent","interimEstimate","estimate","part_id","control_id","totalSumEstimates","ugvaData","koef_variable","base","variable"],"mappings":";;;AAAA,OAAO,iCAAP;AACA,SAASA,SAAT,QAA0B,kBAA1B;;;AAGA,MAAMC,+BAA+B,GAAIC,KAAD,IAAW;AAAA;;AAE/C,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB;AAEA,QAAM;AAAEI,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,WAArB;AAAkCC,IAAAA,WAAlC;AAA+CC,IAAAA;AAA/C,MAA+DN,KAArE;AAEA,MAAIO,aAAa,GAAG,EAApB;AACA,MAAIC,wBAAwB,GAAG,EAA/B;AAEAJ,EAAAA,WAAW,CAACK,OAAZ,CAAoBC,EAAE,IAAI;AACtB,QAAIA,EAAE,CAACT,EAAH,IAASA,EAAb,EAAiBM,aAAa,GAAGG,EAAhB;AACpB,GAFD;AAIAL,EAAAA,WAAW,CAACI,OAAZ,CAAoBC,EAAE,IAAI;AACtB,QAAIA,EAAE,CAACC,aAAH,IAAoBV,EAAxB,EAA4BO,wBAAwB,CAACI,IAAzB,CAA8BF,EAA9B;AAC/B,GAFD;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,wBAAZ;AAEA,MAAIO,kCAAkC,GAAG,CAAzC;AAEAP,EAAAA,wBAAwB,CAACC,OAAzB,CAAiCC,EAAE,IAAI;AACnCK,IAAAA,kCAAkC,IAAIL,EAAE,CAACM,WAAzC;AACH,GAFD,EArB+C,CAyB/C;;AACA,QAAMC,YAAY,GAAGf,MAAM,CAACgB,GAAP,CAAWC,KAAK,IAAI;AACrC,QAAIC,QAAQ,GAAG,CAAf;AACA,QAAIC,YAAY,GAAG,CAAnB;AACA,QAAIC,aAAa,GAAG,CAApB;AACA,QAAIC,iBAAiB,GAAG,CAAxB;AAEAf,IAAAA,wBAAwB,CAACC,OAAzB,CAAiCC,EAAE,IAAG;AAClC,YAAMc,SAAS,GAAG,CAAlB;AACA,YAAMC,WAAW,GAAG,IAApB;AACAtB,MAAAA,SAAS,CAACM,OAAV,CAAkBiB,GAAG,IAAI;AACrB,YAAIA,GAAG,CAACC,aAAJ,IAAqBjB,EAAE,CAACT,EAAxB,IAA8ByB,GAAG,CAACE,QAAJ,IAAgBT,KAAK,CAAClB,EAAxD,EAA4D;AACxD,gBAAM4B,YAAY,GAAG,MAAMnB,EAAE,CAACM,WAAT,GAAuBD,kCAA5C;AACA,gBAAMe,eAAe,GAAGJ,GAAG,CAACK,QAAJ,GAAeF,YAAvC;;AAEA,cAAInB,EAAE,CAACsB,OAAH,IAAc,CAAlB,EAAqB;AACjBZ,YAAAA,QAAQ,IAAIM,GAAG,CAACK,QAAhB;AACAT,YAAAA,aAAa,IAAKZ,EAAE,CAACuB,UAAH,IAAiB,CAAlB,GAAyBH,eAAe,GAAGN,SAA3C,GACyBM,eAAe,GAAGL,WAD5D;AAEH,WAJD,MAKK;AACDJ,YAAAA,YAAY,IAAIK,GAAG,CAACK,QAApB;AACAR,YAAAA,iBAAiB,IAAKb,EAAE,CAACuB,UAAH,IAAiB,CAAlB,GAAyBH,eAAe,GAAGN,SAA3C,GACyBM,eAAe,GAAGL,WADhE;AAEH;AACJ;AACJ,OAhBD;AAiBH,KApBD;AAqBA,WACI;AACIxB,MAAAA,EAAE,EAAEkB,KAAK,CAAClB,EADd;AAEImB,MAAAA,QAAQ,EAAEA,QAFd;AAGIC,MAAAA,YAAY,EAAEA,YAHlB;AAIIC,MAAAA,aAAa,EAAEA,aAJnB;AAKIC,MAAAA,iBAAiB,EAAEA;AALvB,KADJ;AASH,GApCoB,CAArB;AAsCA,MAAIW,iBAAiB,GAAG,CAAxB;AACAjB,EAAAA,YAAY,CAACR,OAAb,CAAsBC,EAAE,IAAIwB,iBAAiB,IAAIxB,EAAE,CAACY,aAAH,GAAmBZ,EAAE,CAACa,iBAAvE,EAjE+C,CAmE/C;;AACA,MAAIY,QAAQ,GAAIlB,YAAY,CAACC,GAAb,CAAiBR,EAAE,IAAI;AACnC,UAAM0B,aAAa,GAAG,GAAtB;AACA,WACI;AACInC,MAAAA,EAAE,EAAES,EAAE,CAACT,EADX;AAEIoC,MAAAA,IAAI,EAAE3B,EAAE,CAACY,aAAH,GAAmB,GAAnB,GAAyBY,iBAFnC;AAGII,MAAAA,QAAQ,EAAG5B,EAAE,CAACa,iBAAH,GAAuB,GAAvB,GAA6BW,iBAA9B,GAAmD;AAHjE,KADJ;AASH,GAXe,CAAhB;AAeArB,EAAAA,OAAO,CAACC,GAAR,CAAYG,YAAZ;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYoB,iBAAZ;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAzFD;;GAAMnC,+B;UAEaD,S;;;KAFbC,+B;AA2FN,eAAeA,+BAAf","sourcesContent":["import \"./Curriculums_visualization.css\"\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nconst Above_curriculums_visualization = (props) => {\r\n\r\n    const { id } = useParams();\r\n\r\n    const { skills, estimates, curriculums, disciplines, groupSkills } = props;\r\n\r\n    let ourCurriculum = [];\r\n    let disciplinesOurCurriculum = [];\r\n\r\n    curriculums.forEach(el => {\r\n        if (el.id == id) ourCurriculum = el;\r\n    });\r\n\r\n    disciplines.forEach(el => {\r\n        if (el.curriculum_id == id) disciplinesOurCurriculum.push(el);\r\n    })\r\n\r\n    console.log(disciplinesOurCurriculum);\r\n\r\n    let totalHoursDisciplinesOurCurriculum = 0;\r\n\r\n    disciplinesOurCurriculum.forEach(el => {\r\n        totalHoursDisciplinesOurCurriculum += el.audit_hours;\r\n    })\r\n\r\n    //Расчет оценок базовой и вариативной частей с учетом вида оценивания и времени\r\n    const sumEstimates = skills.map(skill => {\r\n        let sum_base = 0;\r\n        let sum_variable = 0;\r\n        let sum_calc_base = 0;\r\n        let sum_calc_variable = 0;\r\n\r\n        disciplinesOurCurriculum.forEach(el =>{\r\n            const koef_exam = 1;\r\n            const koef_offset = 0.75;\r\n            estimates.forEach(est => {\r\n                if (est.discipline_id == el.id && est.skill_id == skill.id) {\r\n                    const hoursProcent = 100 * el.audit_hours / totalHoursDisciplinesOurCurriculum;\r\n                    const interimEstimate = est.estimate * hoursProcent;\r\n\r\n                    if (el.part_id == 0) {\r\n                        sum_base += est.estimate;\r\n                        sum_calc_base += (el.control_id == 0)   ? interimEstimate * koef_exam \r\n                                                                : interimEstimate * koef_offset;\r\n                    }\r\n                    else {\r\n                        sum_variable += est.estimate;\r\n                        sum_calc_variable += (el.control_id == 0)   ? interimEstimate * koef_exam \r\n                                                                    : interimEstimate * koef_offset;\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        return (\r\n            {\r\n                id: skill.id,\r\n                sum_base: sum_base,\r\n                sum_variable: sum_variable,\r\n                sum_calc_base: sum_calc_base,\r\n                sum_calc_variable: sum_calc_variable\r\n            }     \r\n        )\r\n    })\r\n\r\n    let totalSumEstimates = 0;\r\n    sumEstimates.forEach (el => totalSumEstimates += el.sum_calc_base + el.sum_calc_variable);\r\n\r\n    //Рассчитываем данные для отрисовки\r\n    let ugvaData =  sumEstimates.map(el => {\r\n        const koef_variable = 0.5;\r\n        return(\r\n            {\r\n                id: el.id,\r\n                base: el.sum_calc_base * 100 / totalSumEstimates,\r\n                variable: (el.sum_calc_variable * 100 / totalSumEstimates) * 0.5,\r\n\r\n\r\n            }\r\n        )\r\n    })\r\n\r\n\r\n\r\n    console.log(sumEstimates);\r\n    console.log(totalSumEstimates);\r\n\r\n    return (\r\n        <div>d</div>\r\n    )\r\n}\r\n\r\nexport default Above_curriculums_visualization; "]},"metadata":{},"sourceType":"module"}